/*
 * ADC.h
 *
 *  Created on: Mar 20, 2018
 *      Author: david
 */

#ifndef ADC_H_
#define ADC_H_

#include "MK64F12.h"
#include "DataTypeDefinitions.h"
#include "ADC.h"

typedef enum {
	ADC_0, ADC_1,
} ADC_Enum;

#define MODULE_DISABLED 31

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función habilita el clock gating del ADC

 	 \param[in]  ADC_Enum ADC
 	 \return void
 	 \todo
 */

void ADC_ClockGating(ADC_Enum ADC);
//ADC_configurationMode=0xc Para que el mode se ponga en 11 y se active una resolusion de 16 bits

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función asigna la resolución del ADC

 	 \param[in]  ADC_Enum ADC, uint8 ADC_configurationMode
 	 \return void
 	 \todo
 */
void ADC_MODE(ADC_Enum ADC, uint8 ADC_configurationMode);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función deshabilita  el ADC_X

 	 \param[in]  ADC_Enum AnalogtoDigital
 	 \return void
 	 \todo
 */
void ADC_Disable(ADC_Enum AnalogtoDigital);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función lee del ADC con una resolución de 16 bits

 	 \param[in]  void
 	 \return uint16
 	 \todo
 */
uint16 ADC_read16b(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función asigna el canal del ADC

 	 \param[in]  void
 	 \return void
 	 \todo
 */
void setChannel();

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función habilita el promedio HARDWARE de 32 muestras

 	 \param[in] void
 	 \return void
 	 \todo
 */
void enable_AVGE();

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función inicializa el ADC

 	 \param[in] void
 	 \return void
 	 \todo
 */
void ADC_init();

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	Esta función deshabilita el promedio HARDWARE de 32 muestras

 	 \param[in]  void
 	 \return void
 	 \todo
 */
void disable_AVGE();

#endif /* ADC_H_ */
